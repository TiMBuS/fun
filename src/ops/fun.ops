#include <math.h>
#include <time.h>

#include "parrot/dynext.h"
#include "../../../../src/pmc/pmc_object.h"
/*VERSION = PARROT_VERSION;*/

inline op frexp(out NUM, in NUM, out INT) :base_core {
	int exp;
	$1 = frexp($2, &exp);
	$3 = exp;
}

inline op strtol(out INT, in STR, in INT) :base_core {
	int exp;
	$1 = strtol($2->strstart, 0, $3);
}

inline op maxint(out INT) :base_core {
	$1 = PARROT_INTVAL_MAX;
}

inline op strftime(out STR, in STR, in PMC) :base_core {
	int errcount, len;
	char* buf;
	struct tm timeinfo;
	
	timeinfo.tm_sec = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 0));
	timeinfo.tm_min = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 1));
	timeinfo.tm_hour = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 2));
	timeinfo.tm_mday = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 3));
	timeinfo.tm_mon = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 4)) - 1;
	timeinfo.tm_year = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 5)) - 1900;
	timeinfo.tm_wday = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 6));
	timeinfo.tm_yday = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 7));
	timeinfo.tm_isdst = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $3, 8));
	
	len = ($2->bufused+5)*2;
	buf = (char *)mem_sys_allocate(len);
	
	for (errcount = 0; !strftime(buf, len, $2->strstart, &timeinfo) && errcount < 3; ++errcount){
		len *= 2;
		mem_sys_free(buf);
		buf = (char *)mem_sys_allocate(len);
	}
	if (errcount == 5){
		mem_sys_free(buf);
		Parrot_ex_throw_from_c_args(
			interp, NULL,
			EXCEPTION_INVALID_OPERATION,
			"Could not allocate enough space for strftime"
		);
	}
	
	$1 = Parrot_str_new(interp, buf, strlen(buf));
	mem_sys_free(buf);
}

inline op mktime(out INT, in PMC) :base_core {
	struct tm timeinfo;
	
	timeinfo.tm_sec   = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 0));
	timeinfo.tm_min   = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 1));
	timeinfo.tm_hour  = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 2));
	timeinfo.tm_mday  = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 3));
	timeinfo.tm_mon   = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 4)) - 1;
	timeinfo.tm_year  = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 5)) - 1900;
	timeinfo.tm_wday  = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 6));
	timeinfo.tm_yday  = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 7));
	timeinfo.tm_isdst = VTABLE_get_integer(interp, VTABLE_get_pmc_keyed_int(interp, $2, 8));

	$1 = mktime(&timeinfo);
}
