# ex: set ro ft=make:
# DO NOT EDIT THIS FILE
# Generated by Parrot::Configure::Compiler from languages/fun/config/makefiles/root.in

## $Id$

## arguments we want to run parrot with
PARROT_ARGS =

## configuration settings
BUILD_DIR     = /home/timbus/parrot
LOAD_EXT      = .so
O             = .o

## Setup some commands
LN_S          = /bin/ln -s
PERL          = /usr/bin/perl
RM_RF         = $(PERL) -MExtUtils::Command -e rm_rf
CP            = $(PERL) -MExtUtils::Command -e cp
PARROT        = ../../parrot
CAT           = $(PERL) -MExtUtils::Command -e cat
BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
BUILD_DYNOPS  = $(PERL) $(BUILD_DIR)/tools/build/dynoplibs.pl
RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl

## places to look for things
PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
PGE_LIBRARY   = $(BUILD_DIR)/runtime/parrot/library/PGE
PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Grammar.pbc
NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
PMC_DIR       = src/pmc

OPSDIR        = src/ops
OPSLIB        = fun
OPS_FILE      = src/ops/fun.ops

all: fun.pbc

FUN_GROUP = $(PMC_DIR)/fun_group$(LOAD_EXT)

SOURCES = fun.pir \
	src/gen_grammar.pir \
	src/gen_actions.pir \
	src/gen_builtins.pir \
	src/gen_objects.pir \
	src/ops/fun_ops$(LOAD_EXT) \
	$(FUN_GROUP)

BUILTINS_PIR = \
	src/builtins/builtins.pir \
	src/builtins/privfunctions.pir \
	src/builtins/combinators.pir \
	src/builtins/composition.pir \
	src/builtins/operands.pir \
	src/builtins/io.pir \
	src/builtins/codeflow.pir \
	src/builtins/listmanip.pir \
	src/builtins/sequences.pir \
	src/builtins/math.pir \

CLASSES_PIR = \
	src/classes/Stack.pir \
	src/classes/Continuation.pir \

	
PMCS = list
PMC_SOURCES = $(PMC_DIR)/list.pmc

# the default target
fun.pbc: $(PARROT) $(SOURCES)
	$(PARROT) $(PARROT_ARGS) -o fun.pbc fun.pir

src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
	    --output=src/gen_grammar.pir \
	    src/parser/grammar.pg

src/gen_actions.pir: $(NQP) $(PCT) src/parser/actions.pm
	$(PARROT) $(PARROT_ARGS) $(NQP) --output=src/gen_actions.pir \
	    --target=pir src/parser/actions.pm

src/gen_builtins.pir: $(BUILTINS_PIR)
	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir

src/gen_objects.pir: $(CLASSES_PIR)
	$(CAT) $(CLASSES_PIR) >src/gen_objects.pir
	
src/ops/fun_ops$(LOAD_EXT) : $(OPS_FILE)
	@cd $(OPSDIR) && $(BUILD_DYNOPS) generate $(OPSLIB)
	@cd $(OPSDIR) && $(BUILD_DYNOPS) compile $(OPSLIB)
	@cd $(OPSDIR) && $(BUILD_DYNOPS) linklibs $(OPSLIB)
	@cd $(OPSDIR) && $(BUILD_DYNOPS) copy "--destination=$(PARROT_DYNEXT)" $(OPSLIB)

$(FUN_GROUP): $(PARROT) $(PMC_SOURCES)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)

# regenerate the Makefile
Makefile: config/makefiles/root.in
	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=fun

# This is a listing of all targets, that are meant to be called by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "  all:               fun.pbc"
	@echo "                     This is the default."
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  testclean:         Clean up test results."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
	@echo "  distclean:         Removes also anything built, in theory"
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

test: all
	$(PERL) t/harness

# this target has nothing to do
testclean:

CLEANUPS = \
  fun.pbc \
  src/gen_*.pir \
  $(OPSDIR)/*.c \
  $(OPSDIR)/*.h \
  $(OPSDIR)/*.dump \
  $(OPSDIR)/*$(O) \
  $(OPSDIR)/*$(LOAD_EXT) \
  $(PMC_DIR)/*.h \
  $(PMC_DIR)/*.c \
  $(PMC_DIR)/*.dump \
  $(PMC_DIR)/*$(O) \
  $(PMC_DIR)/*$(LOAD_EXT) \
  $(PMC_DIR)/*.exp \
  $(PMC_DIR)/*.ilk \
  $(PMC_DIR)/*.manifest \
  $(PMC_DIR)/*.pdb \
  $(PMC_DIR)/*.lib \


clean:
	$(RM_RF) $(CLEANUPS)

realclean: clean
	$(RM_RF) Makefile

distclean: realclean
